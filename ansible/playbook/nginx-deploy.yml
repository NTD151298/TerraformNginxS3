- name: Deploy Nginx with Custom Index.html from S3
  hosts: all
  become: yes

  tasks:
    - name: Update package cache and install Nginx
      apt:
        update_cache: yes
        name: nginx
        state: present
      become: yes

    - name: Stop Nginx service (if already running)
      service:
        name: nginx
        state: stopped
      ignore_errors: yes # This task stops the Nginx service if it's already running.
      # The ignore_errors: yes ensures that it doesn't fail if Nginx is not running.

    - name: Configure Nginx default site to use S3-hosted index.html
      template:
        src: /home/duongtn1512/Terraform-lap3/data/nginx-site-config.conf
        dest: /etc/nginx/sites-available/default
      notify:
        - Restart Nginx
        # When the template is updated, it triggers the Restart Nginx handler.
    - name: Enable Nginx default site
      file:
        src: /etc/nginx/sites-available/default
        dest: /etc/nginx/sites-enabled/default
        state: link
      notify:
        - Restart Nginx
        # This task enables the Nginx default site by creating a symbolic link from the
        # available sites to the enabled sites.
        # It also triggers the Restart Nginx handler when the configuration changes.
  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
        # This handler defines how to restart the Nginx service when called.
        # It ensures that Nginx is restarted after any configuration changes

# The second part of the playbook configures an Application Load Balancer (ALB)
# using the community.aws.elb_application_lb Ansible module and prints the DNS name of the ALB.
- name: Configure Application Load Balancer
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Create Application Load Balancer
      community.aws.elb_application_lb:
        name: my-alb
        state: present
        subnets:
          - subnet-1a2b3c4d
          - subnet-5e6f7g8h
        security_groups:
          - sg-12345678
        listeners:
          - protocol: HTTP
            port: 80
            default_action:
              type: fixed-response
              fixed_response_type: fixed-response
              fixed_response_content_type: text/plain
              fixed_response_status_code: 200 # Add a valid status code
              fixed_response_content: "Hello from the ALB!"
        wait: yes
      register: alb_result

    - name: Print ALB DNS Name
      debug:
        var: alb_result.elb_dns_name
